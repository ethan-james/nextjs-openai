import { type NextPage } from "next";
import Head from "next/head";
import { signIn, signOut, useSession } from "next-auth/react";
import { useState } from "react";

import { api } from "~/utils/api";

const Home: NextPage = () => {
  const [input, setInput] = useState("");
  const [text, setText] = useState("");
  const answer = api.chat.getAnswer.useQuery({ text });

  return (
    <>
      <Head>
        <title>ChatGPT Demo</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            ChatGPT Demo
          </h1>
          <div className="flex w-full flex-col items-center gap-2">
            <form
              className="flex w-full items-center gap-4"
              onSubmit={(event) => {
                event.preventDefault();
                if (input) setText(input);
              }}
            >
              <input
                className="grow rounded-md border p-2"
                type="text"
                placeholder="Your question here."
                onChange={({ target }) => setInput(target.value)}
              />
              <button className="rounded-md bg-blue-500 p-2 text-white">
                Chat.
              </button>
            </form>
            <p className="text-2xl text-white">
              {answer.data ? answer.data.text : "ChatGPT is thinking..."}
            </p>
            <AuthShowcase />
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
